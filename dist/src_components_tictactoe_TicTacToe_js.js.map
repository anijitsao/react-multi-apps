{"version":3,"file":"src_components_tictactoe_TicTacToe_js.js","mappings":"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","sources":["webpack://react-app-simple-calculator/./src/components/tictactoe/Box.js","webpack://react-app-simple-calculator/./src/components/tictactoe/TicTacToe.js","webpack://react-app-simple-calculator/./src/components/tictactoe/TicTacToeHelpers.js","webpack://react-app-simple-calculator/./src/css/tictactoe.css","webpack://react-app-simple-calculator/./src/css/tictactoe.css?a773"],"sourcesContent":["// Box component\nimport { Constants } from \"../Constants\";\n\nconst Box = (props) => {\n  // extracting necessary fields from the props\n  const { value, rowIndex, colIndex, onClickHandler } = props;\n  const boxIndex = rowIndex + colIndex + 1;\n  const boxStyle = boxIndex % 2 === 0 ? \"even-box box\" : \"odd-box box\";\n\n  // initialize all the constants\n  const allConstants = Constants();\n\n  return (\n    <div\n      id={`${rowIndex}-${colIndex}`}\n      className={boxStyle}\n      onClick={onClickHandler}\n    >\n      {value == allConstants.USER_MOVE\n        ? \"X\"\n        : value == allConstants.COMPUTER_MOVE\n        ? \"O\"\n        : \"\"}\n    </div>\n  );\n};\n\nexport default Box;\n","import { useState, useEffect } from \"react\";\nimport Box from \"./Box\";\nimport { Constants } from \"../Constants\";\nimport {\n  generateIndices,\n  checkIfEmptyCell,\n  findDiagonals,\n} from \"./TicTacToeHelpers\";\n\n// css\nimport \"../../css/tictactoe.css\";\n\nconst TicTacToe = (props) => {\n  // initialize all the constants\n  const allConstants = Constants();\n\n  const [box, setBox] = useState(allConstants.BOX_INITIAL);\n  const [userTurn, setUserTurn] = useState(true);\n  const [isBoxFilled, setIsBoxFilled] = useState(false);\n  const [result, setResult] = useState(\"TBD\");\n\n  useEffect(() => {\n    if (Array.isArray(box) && !userTurn) {\n      checkForMatch();\n      computerPlays();\n    }\n  });\n\n  const GRID_LENGTH = allConstants.GRID_LENGTH;\n\n  // handle the onClick event\n  const onClickHandler = (event) => {\n    const { id } = event.target;\n    console.log(\"code comes here\", id);\n    if (!isBoxFilled) {\n      const [rowIndex, colIndex] = generateIndices(id);\n      let isEmpty = checkIfEmptyCell(rowIndex, colIndex, box);\n      if (isEmpty === true) {\n        captureUserMove(rowIndex, colIndex);\n      }\n    } else {\n      showResult();\n    }\n  };\n\n  // capture user's move by set it to 1\n  const captureUserMove = (rowIndex, colIndex) => {\n    console.log(\"Code for user move\");\n    const boxNew = JSON.parse(JSON.stringify(box));\n    boxNew[rowIndex][colIndex] = allConstants.USER_MOVE;\n    setBox(boxNew);\n    setUserTurn(false);\n  };\n\n  // check all the cells are filled or not\n  const checkIfBoxFilled = () => {\n    for (let row = 0; row < allConstants.GRID_LENGTH; row++) {\n      for (let col = 0; col < allConstants.GRID_LENGTH; col++) {\n        if (checkIfEmptyCell(row, col, box)) {\n          setIsBoxFilled(true);\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  // check if a match found\n  const checkForMatch = () => {\n    // for a Horizontal match\n    for (let i = 0; i < GRID_LENGTH; i++) {\n      let rowStr = box[i].join(\"\");\n      checkWinner(rowStr);\n    }\n\n    // for a vertical match\n    const boxTranspose = box[0].map((col, i) => box.map((row) => row[i]));\n    for (let i = 0; i < GRID_LENGTH; i++) {\n      let colStr = boxTranspose[i].join(\"\");\n      checkWinner(colStr);\n    }\n\n    // for a diagonal match\n    let [principalDiagonal, otherDiagonal] = findDiagonals(box);\n\n    checkWinner(principalDiagonal);\n    checkWinner(otherDiagonal);\n  };\n\n  // function to check who is the winner\n  const checkWinner = (str) => {\n    const allEqual = str.split(\"\").every((char) => {\n      return char != allConstants.EMPTY_CELL && char == str[0];\n    });\n    if (str && allEqual) {\n      const winner =\n        str[0] == allConstants.USER_MOVE\n          ? allConstants.USER_MOVE\n          : allConstants.COMPUTER_MOVE;\n      showResult(winner);\n    }\n  };\n\n  // function to capture how Computer gives the moves\n  const computerPlays = () => {\n    while (true && !userTurn) {\n      // generate Random column and row number\n      let randomCol = Math.floor(Math.random() * GRID_LENGTH) + 0;\n      let randomRow = Math.floor(Math.random() * GRID_LENGTH) + 0;\n      console.log(\"random cell generated\", randomCol, \" \", randomRow);\n\n      if (checkIfEmptyCell(randomRow, randomCol, box)) {\n        const boxNew = JSON.parse(JSON.stringify(box));\n        boxNew[randomRow][randomCol] = allConstants.COMPUTER_MOVE;\n        setBox(boxNew);\n        setUserTurn(true);\n        return;\n      }\n    }\n  };\n\n  // show the result\n  const showResult = (winner) => {\n    let content = !winner\n      ? \"GAME TIED\"\n      : winner == allConstants.USER_MOVE\n      ? \"You won\"\n      : \"Computer won\";\n    console.log(\"RESULT of the game is\", result);\n    setIsBoxFilled(true);\n\n    // if result not defined set it\n    result == \"TBD\" ? setResult(content) : result;\n  };\n\n  // render the box contents\n  return (\n    <div className=\"box-container\">\n      {result && result != \"TBD\" ? (\n        <div className=\"result--div\">{`${result}!!!`}</div>\n      ) : (\n        Array.isArray(box) &&\n        box.map((row, rowIndex) => {\n          return (\n            <div className=\"row-container\" key={rowIndex}>\n              {row.map((box, colIndex) => {\n                return (\n                  <Box\n                    value={box}\n                    rowIndex={rowIndex}\n                    colIndex={colIndex}\n                    onClickHandler={onClickHandler}\n                    key={colIndex}\n                  />\n                );\n              })}\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default TicTacToe;\n","import { Constants } from \"../Constants\";\n\n// initialize all the constants\nconst allConstants = Constants();\n\n// generate row and col index\nconst generateIndices = (id) => {\n  let [rowIndex, colIndex] = id.split(\"-\");\n  rowIndex = parseInt(rowIndex);\n  colIndex = parseInt(colIndex);\n  return [rowIndex, colIndex];\n};\n\n// check if it is an empty slot\nconst checkIfEmptyCell = (rowIndex, colIndex, box) => {\n  return box[rowIndex][colIndex] == allConstants.EMPTY_CELL;\n};\n\nconst findDiagonals = (box) => {\n  let principalDiagonal = \"\";\n  let otherDiagonal = \"\";\n  const GRID_LENGTH = allConstants.GRID_LENGTH;\n\n  for (let i = 0; i < GRID_LENGTH; i++) {\n    for (let j = 0; j < GRID_LENGTH; j++) {\n      if (i == j) {\n        principalDiagonal = `${principalDiagonal}${box[i][j]}`;\n      }\n\n      if (i + j + 1 == GRID_LENGTH) {\n        otherDiagonal = `${otherDiagonal}${box[i][j]}`;\n      }\n    }\n  }\n\n  return [principalDiagonal, otherDiagonal];\n};\n\nexport { generateIndices, checkIfEmptyCell, findDiagonals };\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* Tic Tac Toe box related */\\n.box-container {\\n  background-color: var(--lighter-grey);\\n  padding: 1em;\\n\\n  display: grid;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.row-container {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-gap: 7px 1px;\\n  text-align: center;\\n  width: 30vw;\\n}\\n\\n/* all the boxes of the tic tac toe */\\n.box {\\n  color: var(--lighter-grey);\\n  padding: 1.17em;\\n  font-weight: 700;\\n  font-size: 1.5rem;\\n  height: 6rem;\\n}\\n\\n.box:hover {\\n  opacity: 0.8;\\n  transition: var(--slow-transition);\\n  cursor: pointer;\\n}\\n\\n.even-box {\\n  background-color: var(--lighter-grey);\\n  color: var(--light-purple);\\n}\\n\\n.odd-box {\\n  background-color: var(--light-purple);\\n  color: var(--lighter-grey);\\n}\\n\\n.result--div {\\n  font-size: 1.5rem;\\n  font-weight: 100;\\n}\\n\\n/* media queries to make it responsive */\\n@media only screen and (max-width: 600px) {\\n  .row-container {\\n    width: 39vw;\\n  }\\n\\n  .box {\\n    padding: 2.1em;\\n    width: 3rem;\\n  }\\n\\n  .box-container {\\n    padding-left: 0;\\n    padding-right: 5rem;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/tictactoe.css\"],\"names\":[],\"mappings\":\"AAAA,4BAA4B;AAC5B;EACE,qCAAqC;EACrC,YAAY;;EAEZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,iBAAiB;EACjB,kBAAkB;EAClB,WAAW;AACb;;AAEA,qCAAqC;AACrC;EACE,0BAA0B;EAC1B,eAAe;EACf,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,kCAAkC;EAClC,eAAe;AACjB;;AAEA;EACE,qCAAqC;EACrC,0BAA0B;AAC5B;;AAEA;EACE,qCAAqC;EACrC,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA,wCAAwC;AACxC;EACE;IACE,WAAW;EACb;;EAEA;IACE,cAAc;IACd,WAAW;EACb;;EAEA;IACE,eAAe;IACf,mBAAmB;EACrB;AACF\",\"sourcesContent\":[\"/* Tic Tac Toe box related */\\n.box-container {\\n  background-color: var(--lighter-grey);\\n  padding: 1em;\\n\\n  display: grid;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.row-container {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-gap: 7px 1px;\\n  text-align: center;\\n  width: 30vw;\\n}\\n\\n/* all the boxes of the tic tac toe */\\n.box {\\n  color: var(--lighter-grey);\\n  padding: 1.17em;\\n  font-weight: 700;\\n  font-size: 1.5rem;\\n  height: 6rem;\\n}\\n\\n.box:hover {\\n  opacity: 0.8;\\n  transition: var(--slow-transition);\\n  cursor: pointer;\\n}\\n\\n.even-box {\\n  background-color: var(--lighter-grey);\\n  color: var(--light-purple);\\n}\\n\\n.odd-box {\\n  background-color: var(--light-purple);\\n  color: var(--lighter-grey);\\n}\\n\\n.result--div {\\n  font-size: 1.5rem;\\n  font-weight: 100;\\n}\\n\\n/* media queries to make it responsive */\\n@media only screen and (max-width: 600px) {\\n  .row-container {\\n    width: 39vw;\\n  }\\n\\n  .box {\\n    padding: 2.1em;\\n    width: 3rem;\\n  }\\n\\n  .box-container {\\n    padding-left: 0;\\n    padding-right: 5rem;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./tictactoe.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./tictactoe.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["Constants","Box","props","value","rowIndex","colIndex","onClickHandler","boxIndex","boxStyle","allConstants","USER_MOVE","COMPUTER_MOVE","useState","useEffect","generateIndices","checkIfEmptyCell","findDiagonals","TicTacToe","box","setBox","BOX_INITIAL","userTurn","setUserTurn","isBoxFilled","setIsBoxFilled","result","setResult","Array","isArray","checkForMatch","computerPlays","GRID_LENGTH","event","id","target","console","log","isEmpty","captureUserMove","showResult","boxNew","JSON","parse","stringify","checkIfBoxFilled","row","col","i","rowStr","join","checkWinner","boxTranspose","map","colStr","principalDiagonal","otherDiagonal","str","allEqual","split","every","char","EMPTY_CELL","winner","randomCol","Math","floor","random","randomRow","content","parseInt","j"],"sourceRoot":""}